#!/bin/bash

# author: Guillaume Lentendu (guillaume.lentendu@unine.ch)

show_mode () {
cat <<EOF
Description:  SLURM queued jobs summary tool

Usage:        susage <COMMAND>

select a command from:
  use:   show usage summary of each node
  my:    list all your own queued jobs
  all:   list all the queued jobs
  sum:   sum queued jobs by users and state
  nsum:  sum running jobs by nodes and users
  idle:  list nodes and CPUs on idle (i.e. currently accepting jobs)

Author:       Guillaume Lentendu <guillaume.lentendu@unine.ch>

EOF
}

sqall () { squeue -o "%.u %.i %.j %.T %.M %.D %.C %.m %.R %.E" -S "i,T" $@ | awk '{l=split($3,a,"\\.");if(l==1){sub("$","\t_\t_",$3)} else if(l==2){sub("\\.","\t",$3);sub("$","\t_",$3)} else {sub("\\.","\t",$3);sub("\\.","\t",$3)} ; print }' | sed 's/(unfulfilled)//g' | column -t  ; }

sqa () { squeue -O "UserName,JobID,Name:80,State,TimeUsed,NumNodes,NumCPUs,MinMemory,NodeList:40,Reason:40,Dependency:80" -S "I,T" ${@} | sed 's/   */\t/g' | awk 'BEGIN{FS=OFS="\t"}{if($4=="PENDING"){sub("^","_\t",$9)};print}' | column -t -s $'\t' ; }

smy () { sqall -u $USER ; }

sqsum () { squeue -o "%.u %.T %.C" | (sed -u 1q ; sort -k 2,2r -k 1,1) | awk '{if(NR==1){sub("CPUS","NJOBS\tCPUS",$0);print} else {if(NR==2){p=$1;s=$2;c=$3;n=1} else {if($1==p && $2==s){c+=$3;n+=1} else {print p,s,n,c;p=$1;s=$2;c=$3;n=1}}}}END{print p,s,n,c}' | column -t ; }

sqnsum () { sqa -t R | sed '1d' | awk '$4=="RUNNING"{print $9,$1,$7}' | sort -k 1,1 -k 2,2 | awk '{if(NR==1){p=$1;u=$2;s=$3;printf "%s",p}else{if($1==p){if($2==u){s+=$3}else{printf " %s=%s", u,s;u=$2;s=$3}}else{printf " %s=%s\n%s",u,s,$1;p=$1;u=$2;s=$3}}}END{printf " %s=%s\n", u,s}' ; }

suse () { sinfo -N -e -p nodes -o "%N %.O %.C" | sed 's|CPUS.*|Allocated/Idle/Other/Total/Percent_Load|;s|/| |g' | awk '{if(NR==1){print} else print $0,$3/$6*100}' | sed 's/\(\.[0-9]\)[0-9]*$/\1/' | join - <(scontrol show node | sed -n '/TRES/s/.*mem=\([0-9]*[KGM]\).*/\1/p;/^Node/s/NodeName=\(node[0-9]*\).*/\1/p' | awk '{if(NR==1){printf "%s",$1} else {if($1~"^node"){printf "\n%s",$1} else printf " %s",$1}}END{printf "\n"}' | numfmt --from=si --field=2-3 | awk '{if(NF==3){print $0,$3/$2*100} else print $0,"0 NA"}' | numfmt --to=si --field=2-3 | sed 's/\(\.[0-9]\)[0-9]*$/\1/' | cat <(echo "NODELIST MEMORY mem_alloc perc_mem_alloc") -) | column -t -R 2,3,4,5,6,7,8,9,10 ; }

sidle () { sinfo -e --format="%15N %6D %10P %5c %7z %11m %10T %E" -t idle -p bigmem,normal,gpu,epyc ; }

case "$1" in
	"" ) show_mode >&2 ; exit 0 ;;
	idle ) sidle ;;
	my ) smy ;;
	all ) sqall ;;
	sum ) sqsum ;;
	nsum ) sqnsum ;;
	use ) suse ;;
	* ) echo -e "Unknown command $1\t" >&2 ; show_mode >&2 ; exit 1 ;;
esac
